class dangenBer { //[I-S]LN=0;[I-E]
 //[I-S]LN=1;[I-E]
  public void UpdateRoom(boolean[] status, String txt, SpatialObject objs, VertexFile walls, VertexFile doors) { //[I-S]LN=2;[I-E]
    StringBuilder name = new StringBuilder(); //[I-S]LN=3;[I-E]
    for (int i = 0; i < status.length; i++) { //[I-S]LN=4;[I-E]
      name.setLength(0); //[I-S]LN=5;[I-E]
      Vertex obj = Vertex.loadFile(status[i] ? doors : walls); //[I-S]LN=6;[I-E]
      float rot = (i == 0) ? -90 : (i == 1) ? 180 : (i == 2) ? 90 : 0; //[I-S]LN=7;[I-E]
      name.append(txt).append(" / ").append(rot); //[I-S]LN=8;[I-E]
      SpatialObject ob = new SpatialObject(name.toString(), objs); //[I-S]LN=9;[I-E]
      ob.addComponent(new ModelRenderer(obj)); //[I-S]LN=10;[I-E]
      ob.addComponent(new Collider(3)); //[I-S]LN=11;[I-E]
      ModelRenderer model = ob.findComponent("ModelRenderer"); //[I-S]LN=12;[I-E]
      model.setMaterial(new Material()); //[I-S]LN=13;[I-E]
      model.material.setShader("PBR/Standard"); //[I-S]LN=14;[I-E]
      model.material.setReceiveLight(false); //[I-S]LN=15;[I-E]
      Collider col = ob.findComponent("Collider"); //[I-S]LN=16;[I-E]
      col.setVertex(obj); //[I-S]LN=17;[I-E]
      Quaternion rots = new Quaternion(); //[I-S]LN=18;[I-E]
      rots.setFromEuler(new Vector3(0, rot, 0)); //[I-S]LN=19;[I-E]
      ob.setRotation(rots); //[I-S]LN=20;[I-E]
    }  //[I-S]LN=21;[I-E]
  } //[I-S]LN=22;[I-E]
} //[I-S]LN=23;[I-E]