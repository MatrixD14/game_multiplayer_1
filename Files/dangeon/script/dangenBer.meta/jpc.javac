class dangenBer { //[I-S]LN=0;[I-E]
  private HashSet<Long> gerar = new HashSet<Long>(); //[I-S]LN=1;[I-E]
 //[I-S]LN=2;[I-E]
  public void UpdateRoom(int[] status, String txt, SpatialObject objs, VertexFile walls, VertexFile doors,Color color) { //[I-S]LN=3;[I-E]
    String[] name = txt.split("\\s+"); //[I-S]LN=4;[I-E]
    int cellx = Integer.parseInt(name[0]), cellz = Integer.parseInt(name[1]); //[I-S]LN=5;[I-E]
    int[][] dirs = {{0, -1}, {-1, 0}, {0, 1}, {1, 0}}; //[I-S]LN=6;[I-E]
    for (int i = 0; i < status.length; i++) { //[I-S]LN=7;[I-E]
      if (status[i] == 0) continue; //[I-S]LN=8;[I-E]
      int wx = 2 * cellx + dirs[i][0], wz = 2 * cellz + dirs[i][1]; //[I-S]LN=9;[I-E]
      long key = codKey(wx, wz); //[I-S]LN=10;[I-E]
      //Console.log(key); //[I-S]LN=11;[I-E]
      if (gerar.contains(key)) continue; //[I-S]LN=12;[I-E]
      gerar.add(key); //[I-S]LN=13;[I-E]
 //[I-S]LN=14;[I-E]
      Vertex obj = Vertex.loadFile(status[i] == 1 ? doors : walls); //[I-S]LN=15;[I-E]
      float rot = (i == 0) ? -90 : (i == 1) ? 180 : (i == 2) ? 90 : 0; //[I-S]LN=16;[I-E]
      spawObj(rot, new Point2(0, 0), new Point3(1, 1, 1),color, new SpatialObject(txt + key, objs), obj); //[I-S]LN=17;[I-E]
    } //[I-S]LN=18;[I-E]
  }  //[I-S]LN=19;[I-E]
 //[I-S]LN=20;[I-E]
  public SpatialObject spawObj(float rot, Point2 pos, Point3 scale,Color color, SpatialObject ob, Vertex obj) { //[I-S]LN=21;[I-E]
    ob.addComponent(new ModelRenderer(obj)); //[I-S]LN=22;[I-E]
    ob.addComponent(new Collider(3)); //[I-S]LN=23;[I-E]
    ModelRenderer model = ob.findComponent("ModelRenderer"); //[I-S]LN=24;[I-E]
    model.setMaterial(new Material()); //[I-S]LN=25;[I-E]
    model.material.setShader("PBR/Standard"); //[I-S]LN=26;[I-E]
    model.material.setReceiveLight(false); //[I-S]LN=27;[I-E]
    model.material.setDiffuse(color); //[I-S]LN=28;[I-E]
    Collider col = ob.findComponent("Collider"); //[I-S]LN=29;[I-E]
    col.setVertex(obj); //[I-S]LN=30;[I-E]
    Quaternion rots = new Quaternion(); //[I-S]LN=31;[I-E]
    rots.setFromEuler(new Vector3(0, rot, 0)); //[I-S]LN=32;[I-E]
    ob.setRotation(rots); //[I-S]LN=33;[I-E]
    ob.setPosition(pos.x, 0, pos.y); //[I-S]LN=34;[I-E]
    ob.setScale(scale.x, scale.y, scale.z); //[I-S]LN=35;[I-E]
    return ob; //[I-S]LN=36;[I-E]
  } //[I-S]LN=37;[I-E]
 //[I-S]LN=38;[I-E]
  private long codKey(int x, int z) { //[I-S]LN=39;[I-E]
    return (((long) x) << 32) | (z & 0xFFFFFFFFL); //[I-S]LN=40;[I-E]
  } //[I-S]LN=41;[I-E]
} //[I-S]LN=42;[I-E]