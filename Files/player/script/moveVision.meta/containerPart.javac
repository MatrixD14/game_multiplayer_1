package JAVARuntime;

import java.util.*;
import java.util.concurrent.*;
import java.util.concurrent.atomic.*;
import java.util.concurrent.locks.*;
import java.util.function.*;
import java.util.regex.*;
import java.util.stream.*;
import java.util.zip.*;
import java.text.*;
import java.net.*;
import java.math.*;
import java.io.*;
import java.nio.*;
import java.time.*;
import java.time.chrono.*;
import java.time.format.*;
import java.time.temporal.*;
import java.time.zone.*;



public class _JContainer{}

//C-R:moveVision
class moveVision extends Component { //[I-S]LN=0;[I-E]
  private Vector2 joy, slid; //[I-S]LN=1;[I-E]
  private Characterbody ch; //[I-S]LN=2;[I-E]
  private float speedJ = 10; //[I-S]LN=3;[I-E]
  private float x, y, camx, camy; //[I-S]LN=4;[I-E]
  private SpatialObject cam; //[I-S]LN=5;[I-E]
  private float cammin = -80, cammax = 80; //[I-S]LN=6;[I-E]
public   void start() { //[I-S]LN=7;[I-E]
    joy = Input.getAxisValue("joy"); //[I-S]LN=8;[I-E]
    slid = Input.getAxisValue("slid"); //[I-S]LN=9;[I-E]
    cam = myObject.findChildObject("vision"); //[I-S]LN=10;[I-E]
    ch = myObject.getPhysics().getPhysicsEntity(); //[I-S]LN=11;[I-E]
  } //[I-S]LN=12;[I-E]
 //[I-S]LN=13;[I-E]
public   void repeat() { //[I-S]LN=14;[I-E]
    if (key("w") || key("s") || key("a") || key("d")) { //[I-S]LN=15;[I-E]
      movekey(); //[I-S]LN=16;[I-E]
    } else { //[I-S]LN=17;[I-E]
move(joy.getX() * speedJ, joy.getY() * speedJ); //[I-S]LN=18;[I-E]
    } //[I-S]LN=19;[I-E]
slidCam(slid.getX(), slid.getY()); //[I-S]LN=20;[I-E]
  } //[I-S]LN=21;[I-E]
 //[I-S]LN=22;[I-E]
  private void movekey() { //[I-S]LN=23;[I-E]
    float x = 0, y = 0; //[I-S]LN=24;[I-E]
    if (key("w")) y = +1; //[I-S]LN=25;[I-E]
    if (key("s")) y = -1; //[I-S]LN=26;[I-E]
    if (key("a")) x = -1; //[I-S]LN=27;[I-E]
    if (key("d")) x = +1; //[I-S]LN=28;[I-E]
    move(x * speedJ, -y * speedJ); //[I-S]LN=29;[I-E]
  } //[I-S]LN=30;[I-E]
 //[I-S]LN=31;[I-E]
  private boolean key(String key) { //[I-S]LN=32;[I-E]
    if (Input.keyboard.isKeyPressed(key)) return true; //[I-S]LN=33;[I-E]
    return false; //[I-S]LN=34;[I-E]
  } //[I-S]LN=35;[I-E]
 //[I-S]LN=36;[I-E]
  private void move(float x, float y) { //[I-S]LN=37;[I-E]
    ch.setSpeed(-x, -y); //[I-S]LN=38;[I-E]
  } //[I-S]LN=39;[I-E]
 //[I-S]LN=40;[I-E]
  private void slidCam(float x, float y) { //[I-S]LN=41;[I-E]
    camx += x; //[I-S]LN=42;[I-E]
    myObject.getRotation().selfLookTo(new Vector3(Math.sin(-camx), 0, Math.cos(-camx))); //[I-S]LN=43;[I-E]
    camy = Math.clamp(cammin, (camy += y), cammax); //[I-S]LN=44;[I-E]
    cam.getRotation().selfLookTo(new Vector3(0, Math.sin(-camy), Math.cos(-camy))); //[I-S]LN=45;[I-E]
  } //[I-S]LN=46;[I-E]
 //[I-S]LN=47;[I-E]
  /* //[I-S]LN=48;[I-E]
  float shakeAmount = .15f, times = 0; //[I-S]LN=49;[I-E]
  public boolean onoff = true; //[I-S]LN=50;[I-E]
 //[I-S]LN=51;[I-E]
  private void shake(float value) { //[I-S]LN=52;[I-E]
    if (!onoff) return; //[I-S]LN=53;[I-E]
    Vector3 mypos = obj.position.copy(); //[I-S]LN=54;[I-E]
    if (onoff) { //[I-S]LN=55;[I-E]
      times += 0.01f; //[I-S]LN=56;[I-E]
      float offsetX = (float) Random.range(-shakeAmount, shakeAmount); //[I-S]LN=57;[I-E]
      float offsetZ = (float) Random.range(-shakeAmount, shakeAmount); //[I-S]LN=58;[I-E]
      obj.setPosition(mypos.x + offsetX, mypos.y, mypos.z + offsetZ); //[I-S]LN=59;[I-E]
      if (times > value) { //[I-S]LN=60;[I-E]
        obj.setPosition(mypos); //[I-S]LN=61;[I-E]
        onoff = false; //[I-S]LN=62;[I-E]
        times = 0; //[I-S]LN=63;[I-E]
      } //[I-S]LN=64;[I-E]
    } //[I-S]LN=65;[I-E]
  }*/ //[I-S]LN=66;[I-E]
} // 0.329f //[I-S]LN=67;[I-E]