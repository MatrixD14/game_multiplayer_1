package JAVARuntime;

import java.util.*;
import java.util.concurrent.*;
import java.util.concurrent.atomic.*;
import java.util.concurrent.locks.*;
import java.util.function.*;
import java.util.regex.*;
import java.util.stream.*;
import java.util.zip.*;
import java.text.*;
import java.net.*;
import java.math.*;
import java.io.*;
import java.nio.*;
import java.time.*;
import java.time.chrono.*;
import java.time.format.*;
import java.time.temporal.*;
import java.time.zone.*;



public class _JContainer{}

//C-R:handleProtocolo
class handleProtocolo { //[I-S]LN=0;[I-E]
  public void handleRot(String txt, int myId, Vector3Buffer rotBufferCache, int[] remoteId, int maxPlayer) { //[I-S]LN=1;[I-E]
    String[] p = txt.split(":"); //[I-S]LN=2;[I-E]
    int id = Integer.parseInt(p[1]); //[I-S]LN=3;[I-E]
    if (id == myId) return; //[I-S]LN=4;[I-E]
    float x = Float.parseFloat(p[2]); //[I-S]LN=5;[I-E]
    float y = Float.parseFloat(p[3]); //[I-S]LN=6;[I-E]
    float z = Float.parseFloat(p[4]); //[I-S]LN=7;[I-E]
 //[I-S]LN=8;[I-E]
    for (int i = 0; i < maxPlayer; i++) { //[I-S]LN=9;[I-E]
      if (remoteId[i] == id) { //[I-S]LN=10;[I-E]
        rotBufferCache.set(i, x, y, z); //[I-S]LN=11;[I-E]
        break; //[I-S]LN=12;[I-E]
      } //[I-S]LN=13;[I-E]
    } //[I-S]LN=14;[I-E]
  } //[I-S]LN=15;[I-E]
 //[I-S]LN=16;[I-E]
  public void handlePos(String txt, int myId, Vector3Buffer posBufferCache, int[] remoteId, int maxPlayer) { //[I-S]LN=17;[I-E]
    String[] p = txt.split(":"); //[I-S]LN=18;[I-E]
    int id = Integer.parseInt(p[1]); //[I-S]LN=19;[I-E]
    if (id == myId) return; //[I-S]LN=20;[I-E]
    float x = Float.parseFloat(p[2]); //[I-S]LN=21;[I-E]
    float y = Float.parseFloat(p[3]); //[I-S]LN=22;[I-E]
    float z = Float.parseFloat(p[4]); //[I-S]LN=23;[I-E]
 //[I-S]LN=24;[I-E]
    for (int i = 0; i < maxPlayer; i++) { //[I-S]LN=25;[I-E]
      if (remoteId[i] == id) { //[I-S]LN=26;[I-E]
        posBufferCache.set(i, x, y, z); //[I-S]LN=27;[I-E]
        break; //[I-S]LN=28;[I-E]
      } //[I-S]LN=29;[I-E]
    } //[I-S]LN=30;[I-E]
  } //[I-S]LN=31;[I-E]
}  //[I-S]LN=32;[I-E]